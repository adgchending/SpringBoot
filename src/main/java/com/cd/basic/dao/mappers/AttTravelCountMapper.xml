<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cd.basic.dao.AttTravelCountDao">
    <!-- AttTravelCount的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_AttTravelCount_Map" type="com.cd.basic.pojo.domain.AttTravelCount">
        <id column="id" property="id" />
        <result column="USER_FK_CODE" property="userFkCode" />
        <result column="TRAVEL_TIME" property="travelTime" />
        <result column="DEL_STATUS" property="delStatus" />
        <result column="TRAVEL_TYPE" property="travelType" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="SINGLE_FK_CODE" property="singleFkCode" />
        <result column="TRAVEL_DATE" property="travelDate" />
        <result column="FK_CODE" property="fkCode" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:Att_Travel_Count的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="Att_Travel_Count_Column">
        Att_Travel_Count.id as id
        ,Att_Travel_Count.USER_FK_CODE as USER_FK_CODE
        ,Att_Travel_Count.TRAVEL_TIME as TRAVEL_TIME
        ,Att_Travel_Count.DEL_STATUS as DEL_STATUS
        ,Att_Travel_Count.TRAVEL_TYPE as TRAVEL_TYPE
        ,Att_Travel_Count.CREATE_TIME as CREATE_TIME
        ,Att_Travel_Count.UPDATE_TIME as UPDATE_TIME
        ,Att_Travel_Count.SINGLE_FK_CODE as SINGLE_FK_CODE
        ,Att_Travel_Count.TRAVEL_DATE as TRAVEL_DATE
        ,Att_Travel_Count.FK_CODE as FK_CODE
    </sql>

    <!--获得类名为:AttTravelCount对应的数据库表的数据总行数 -->
    <select id="getAttTravelCountRowCount" parameterType="com.cd.common.Assist" resultType="java.lang.Long">
        select count(id) from Att_Travel_Count
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:AttTravelCount对应数据库中表的数据集合 -->
    <select id="selectAttTravelCount" parameterType="com.cd.common.Assist"  resultMap="result_AttTravelCount_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="Att_Travel_Count_Column" /> 
            </otherwise>
        </choose>
        from Att_Travel_Count
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM Att_Travel_Count
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=Att_Travel_Count.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个AttTravelCount对象,以参数AttTravelCount对象中不为空的属性作为条件进行查询-->
    <select id="selectAttTravelCountByObj" parameterType="com.cd.basic.pojo.domain.AttTravelCount" resultMap="result_AttTravelCount_Map">
        select 
            <include refid="Att_Travel_Count_Column" /> 
        from Att_Travel_Count
        <where>
            <if test="fkCode != null "> and Att_Travel_Count.FK_CODE = #{fkCode}</if>
            <if test="travelDate != null "> and Att_Travel_Count.TRAVEL_DATE = #{travelDate}</if>
            <if test="singleFkCode != null "> and Att_Travel_Count.SINGLE_FK_CODE = #{singleFkCode}</if>
            <if test="updateTime != null "> and Att_Travel_Count.UPDATE_TIME = #{updateTime}</if>
            <if test="createTime != null "> and Att_Travel_Count.CREATE_TIME = #{createTime}</if>
            <if test="travelType != null "> and Att_Travel_Count.TRAVEL_TYPE = #{travelType}</if>
            <if test="delStatus != null "> and Att_Travel_Count.DEL_STATUS = #{delStatus}</if>
            <if test="travelTime != null "> and Att_Travel_Count.TRAVEL_TIME = #{travelTime}</if>
            <if test="userFkCode != null "> and Att_Travel_Count.USER_FK_CODE = #{userFkCode}</if>
            <if test="id != null "> and Att_Travel_Count.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过AttTravelCount的id获得对应数据库中表的数据对象-->
    <select id="selectAttTravelCountById" parameterType="java.lang.Long" resultMap="result_AttTravelCount_Map">
        select 
            <include refid="Att_Travel_Count_Column" /> 
        from Att_Travel_Count
        where Att_Travel_Count.id = #{id}
    </select> 

    <!-- 将AttTravelCount插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertAttTravelCount" parameterType="com.cd.basic.pojo.domain.AttTravelCount">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Travel_Count(id,USER_FK_CODE,TRAVEL_TIME,DEL_STATUS,TRAVEL_TYPE,CREATE_TIME,UPDATE_TIME,SINGLE_FK_CODE,TRAVEL_DATE,FK_CODE) 
        values(#{id},#{userFkCode},#{travelTime},#{delStatus},#{travelType},#{createTime},#{updateTime},#{singleFkCode},#{travelDate},#{fkCode})
    </insert>

    <!-- 将AttTravelCount中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyAttTravelCount" parameterType="com.cd.basic.pojo.domain.AttTravelCount">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Travel_Count
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userFkCode != null">USER_FK_CODE,</if>
            <if test="travelTime != null">TRAVEL_TIME,</if>
            <if test="delStatus != null">DEL_STATUS,</if>
            <if test="travelType != null">TRAVEL_TYPE,</if>
            <if test="createTime != null">CREATE_TIME,</if>
            <if test="updateTime != null">UPDATE_TIME,</if>
            <if test="singleFkCode != null">SINGLE_FK_CODE,</if>
            <if test="travelDate != null">TRAVEL_DATE,</if>
            <if test="fkCode != null">FK_CODE,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="userFkCode != null"> #{userFkCode},</if>
            <if test="travelTime != null"> #{travelTime},</if>
            <if test="delStatus != null"> #{delStatus},</if>
            <if test="travelType != null"> #{travelType},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="singleFkCode != null"> #{singleFkCode},</if>
            <if test="travelDate != null"> #{travelDate},</if>
            <if test="fkCode != null"> #{fkCode},</if>
        </trim>
    </insert>

    <!-- 将AttTravelCount批量插入到对应数据库的表中-->
    <insert id="insertAttTravelCountByBatch" parameterType="ArrayList">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Travel_Count(id,USER_FK_CODE,TRAVEL_TIME,DEL_STATUS,TRAVEL_TYPE,CREATE_TIME,UPDATE_TIME,SINGLE_FK_CODE,TRAVEL_DATE,FK_CODE) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.userFkCode},#{item.travelTime},#{item.delStatus},#{item.travelType},#{item.createTime},#{item.updateTime},#{item.singleFkCode},#{item.travelDate},#{item.fkCode})
        </foreach>
    </insert>

    <!-- 通过AttTravelCount的id将数据库表中对应的数据删除-->
    <delete id="deleteAttTravelCountById" parameterType="java.lang.Long">
        delete from Att_Travel_Count
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将AttTravelCount对应的数据库表的数据删除-->
    <delete id="deleteAttTravelCount" parameterType="com.cd.common.Assist">
        delete from Att_Travel_Count
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过AttTravelCount的id将AttTravelCount的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateAttTravelCountById" parameterType="com.cd.basic.pojo.domain.AttTravelCount">
        update Att_Travel_Count set
            USER_FK_CODE=#{userFkCode}
            ,TRAVEL_TIME=#{travelTime}
            ,DEL_STATUS=#{delStatus}
            ,TRAVEL_TYPE=#{travelType}
            ,CREATE_TIME=#{createTime}
            ,UPDATE_TIME=#{updateTime}
            ,SINGLE_FK_CODE=#{singleFkCode}
            ,TRAVEL_DATE=#{travelDate}
            ,FK_CODE=#{fkCode}
        where id=#{id}
    </update>

    <!-- 通过AttTravelCount的id将AttTravelCount中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttTravelCountById" parameterType="com.cd.basic.pojo.domain.AttTravelCount">
        update Att_Travel_Count
        <set>
            <if test="userFkCode != null">
                USER_FK_CODE=#{userFkCode},
            </if>
            <if test="travelTime != null">
                TRAVEL_TIME=#{travelTime},
            </if>
            <if test="delStatus != null">
                DEL_STATUS=#{delStatus},
            </if>
            <if test="travelType != null">
                TRAVEL_TYPE=#{travelType},
            </if>
            <if test="createTime != null">
                CREATE_TIME=#{createTime},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME=#{updateTime},
            </if>
            <if test="singleFkCode != null">
                SINGLE_FK_CODE=#{singleFkCode},
            </if>
            <if test="travelDate != null">
                TRAVEL_DATE=#{travelDate},
            </if>
            <if test="fkCode != null">
                FK_CODE=#{fkCode},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将AttTravelCount中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateAttTravelCount" parameterType="map">
        update Att_Travel_Count
        <set>
                id=#{enti.id},
                USER_FK_CODE=#{enti.userFkCode},
                TRAVEL_TIME=#{enti.travelTime},
                DEL_STATUS=#{enti.delStatus},
                TRAVEL_TYPE=#{enti.travelType},
                CREATE_TIME=#{enti.createTime},
                UPDATE_TIME=#{enti.updateTime},
                SINGLE_FK_CODE=#{enti.singleFkCode},
                TRAVEL_DATE=#{enti.travelDate},
                FK_CODE=#{enti.fkCode},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将AttTravelCount中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttTravelCount" parameterType="map">
        update Att_Travel_Count
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.userFkCode != null">
                USER_FK_CODE=#{enti.userFkCode},
            </if>
            <if test="enti.travelTime != null">
                TRAVEL_TIME=#{enti.travelTime},
            </if>
            <if test="enti.delStatus != null">
                DEL_STATUS=#{enti.delStatus},
            </if>
            <if test="enti.travelType != null">
                TRAVEL_TYPE=#{enti.travelType},
            </if>
            <if test="enti.createTime != null">
                CREATE_TIME=#{enti.createTime},
            </if>
            <if test="enti.updateTime != null">
                UPDATE_TIME=#{enti.updateTime},
            </if>
            <if test="enti.singleFkCode != null">
                SINGLE_FK_CODE=#{enti.singleFkCode},
            </if>
            <if test="enti.travelDate != null">
                TRAVEL_DATE=#{enti.travelDate},
            </if>
            <if test="enti.fkCode != null">
                FK_CODE=#{enti.fkCode},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>