<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cd.basic.dao.AttRCardStudentDao">
    <!-- AttRCardStudent的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_AttRCardStudent_Map" type="com.cd.basic.pojo.domain.AttRCardStudent">
        <id column="ID" property="id" />
        <result column="CARD_FK_CODE" property="cardFkCode" />
        <result column="DEL_STATUS" property="delStatus" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="FK_CODE" property="fkCode" />
        <result column="STUDENT_FK_CODE" property="studentFkCode" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:Att_R_Card_Student的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="Att_R_Card_Student_Column">
        Att_R_Card_Student.ID as ID
        ,Att_R_Card_Student.CARD_FK_CODE as CARD_FK_CODE
        ,Att_R_Card_Student.DEL_STATUS as DEL_STATUS
        ,Att_R_Card_Student.UPDATE_TIME as UPDATE_TIME
        ,Att_R_Card_Student.CREATE_TIME as CREATE_TIME
        ,Att_R_Card_Student.FK_CODE as FK_CODE
        ,Att_R_Card_Student.STUDENT_FK_CODE as STUDENT_FK_CODE
    </sql>

    <!--获得类名为:AttRCardStudent对应的数据库表的数据总行数 -->
    <select id="getAttRCardStudentRowCount" parameterType="com.cd.common.Assist" resultType="java.lang.Long">
        select count(ID) from Att_R_Card_Student
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:AttRCardStudent对应数据库中表的数据集合 -->
    <select id="selectAttRCardStudent" parameterType="com.cd.common.Assist"  resultMap="result_AttRCardStudent_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="Att_R_Card_Student_Column" /> 
            </otherwise>
        </choose>
        from Att_R_Card_Student
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT ID as primary_key FROM Att_R_Card_Student
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=Att_R_Card_Student.ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个AttRCardStudent对象,以参数AttRCardStudent对象中不为空的属性作为条件进行查询-->
    <select id="selectAttRCardStudentByObj" parameterType="com.cd.basic.pojo.domain.AttRCardStudent" resultMap="result_AttRCardStudent_Map">
        select 
            <include refid="Att_R_Card_Student_Column" /> 
        from Att_R_Card_Student
        <where>
            <if test="studentFkCode != null "> and Att_R_Card_Student.STUDENT_FK_CODE = #{studentFkCode}</if>
            <if test="fkCode != null "> and Att_R_Card_Student.FK_CODE = #{fkCode}</if>
            <if test="createTime != null "> and Att_R_Card_Student.CREATE_TIME = #{createTime}</if>
            <if test="updateTime != null "> and Att_R_Card_Student.UPDATE_TIME = #{updateTime}</if>
            <if test="delStatus != null "> and Att_R_Card_Student.DEL_STATUS = #{delStatus}</if>
            <if test="cardFkCode != null "> and Att_R_Card_Student.CARD_FK_CODE = #{cardFkCode}</if>
            <if test="id != null "> and Att_R_Card_Student.ID = #{id}</if>
        </where>
    </select> 

    <!-- 通过AttRCardStudent的id获得对应数据库中表的数据对象-->
    <select id="selectAttRCardStudentById" parameterType="java.lang.Long" resultMap="result_AttRCardStudent_Map">
        select 
            <include refid="Att_R_Card_Student_Column" /> 
        from Att_R_Card_Student
        where Att_R_Card_Student.ID = #{id}
    </select> 

    <!-- 将AttRCardStudent插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertAttRCardStudent" parameterType="com.cd.basic.pojo.domain.AttRCardStudent">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_R_Card_Student(ID,CARD_FK_CODE,DEL_STATUS,UPDATE_TIME,CREATE_TIME,FK_CODE,STUDENT_FK_CODE) 
        values(#{id},#{cardFkCode},#{delStatus},#{updateTime},#{createTime},#{fkCode},#{studentFkCode})
    </insert>

    <!-- 将AttRCardStudent中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyAttRCardStudent" parameterType="com.cd.basic.pojo.domain.AttRCardStudent">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_R_Card_Student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">ID,</if>
            <if test="cardFkCode != null">CARD_FK_CODE,</if>
            <if test="delStatus != null">DEL_STATUS,</if>
            <if test="updateTime != null">UPDATE_TIME,</if>
            <if test="createTime != null">CREATE_TIME,</if>
            <if test="fkCode != null">FK_CODE,</if>
            <if test="studentFkCode != null">STUDENT_FK_CODE,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="cardFkCode != null"> #{cardFkCode},</if>
            <if test="delStatus != null"> #{delStatus},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="fkCode != null"> #{fkCode},</if>
            <if test="studentFkCode != null"> #{studentFkCode},</if>
        </trim>
    </insert>

    <!-- 将AttRCardStudent批量插入到对应数据库的表中-->
    <insert id="insertAttRCardStudentByBatch" parameterType="ArrayList">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_R_Card_Student(ID,CARD_FK_CODE,DEL_STATUS,UPDATE_TIME,CREATE_TIME,FK_CODE,STUDENT_FK_CODE) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.cardFkCode},#{item.delStatus},#{item.updateTime},#{item.createTime},#{item.fkCode},#{item.studentFkCode})
        </foreach>
    </insert>

    <!-- 通过AttRCardStudent的id将数据库表中对应的数据删除-->
    <delete id="deleteAttRCardStudentById" parameterType="java.lang.Long">
        delete from Att_R_Card_Student
        where ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将AttRCardStudent对应的数据库表的数据删除-->
    <delete id="deleteAttRCardStudent" parameterType="com.cd.common.Assist">
        delete from Att_R_Card_Student
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过AttRCardStudent的id将AttRCardStudent的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateAttRCardStudentById" parameterType="com.cd.basic.pojo.domain.AttRCardStudent">
        update Att_R_Card_Student set
            CARD_FK_CODE=#{cardFkCode}
            ,DEL_STATUS=#{delStatus}
            ,UPDATE_TIME=#{updateTime}
            ,CREATE_TIME=#{createTime}
            ,FK_CODE=#{fkCode}
            ,STUDENT_FK_CODE=#{studentFkCode}
        where ID=#{id}
    </update>

    <!-- 通过AttRCardStudent的id将AttRCardStudent中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttRCardStudentById" parameterType="com.cd.basic.pojo.domain.AttRCardStudent">
        update Att_R_Card_Student
        <set>
            <if test="cardFkCode != null">
                CARD_FK_CODE=#{cardFkCode},
            </if>
            <if test="delStatus != null">
                DEL_STATUS=#{delStatus},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME=#{updateTime},
            </if>
            <if test="createTime != null">
                CREATE_TIME=#{createTime},
            </if>
            <if test="fkCode != null">
                FK_CODE=#{fkCode},
            </if>
            <if test="studentFkCode != null">
                STUDENT_FK_CODE=#{studentFkCode},
            </if>
        </set>
        where ID=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将AttRCardStudent中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateAttRCardStudent" parameterType="map">
        update Att_R_Card_Student
        <set>
                ID=#{enti.id},
                CARD_FK_CODE=#{enti.cardFkCode},
                DEL_STATUS=#{enti.delStatus},
                UPDATE_TIME=#{enti.updateTime},
                CREATE_TIME=#{enti.createTime},
                FK_CODE=#{enti.fkCode},
                STUDENT_FK_CODE=#{enti.studentFkCode},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将AttRCardStudent中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttRCardStudent" parameterType="map">
        update Att_R_Card_Student
        <set>
            <if test="enti.id != null">
                ID=#{enti.id},
            </if>
            <if test="enti.cardFkCode != null">
                CARD_FK_CODE=#{enti.cardFkCode},
            </if>
            <if test="enti.delStatus != null">
                DEL_STATUS=#{enti.delStatus},
            </if>
            <if test="enti.updateTime != null">
                UPDATE_TIME=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                CREATE_TIME=#{enti.createTime},
            </if>
            <if test="enti.fkCode != null">
                FK_CODE=#{enti.fkCode},
            </if>
            <if test="enti.studentFkCode != null">
                STUDENT_FK_CODE=#{enti.studentFkCode},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>