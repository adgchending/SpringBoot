<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cd.basic.dao.AttStudentCardDao">
    <!-- AttStudentCard的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_AttStudentCard_Map" type="com.cd.basic.pojo.domain.AttStudentCard">
        <id column="ID" property="id" />
        <result column="CAMPUS_FK_CODE" property="campusFkCode" />
        <result column="CARD_CODE" property="cardCode" />
        <result column="BINDING_STATUS" property="bindingStatus" />
        <result column="DEL_STATUS" property="delStatus" />
        <result column="ENABLE_STATUS" property="enableStatus" />
        <result column="REMARKS" property="remarks" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="FK_CODE" property="fkCode" />
        <result column="SCHOOL_FK_CODE" property="schoolFkCode" />
        <result column="TYPE" property="type" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:Att_Student_Card的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="Att_Student_Card_Column">
        Att_Student_Card.ID as ID
        ,Att_Student_Card.CAMPUS_FK_CODE as CAMPUS_FK_CODE
        ,Att_Student_Card.CARD_CODE as CARD_CODE
        ,Att_Student_Card.BINDING_STATUS as BINDING_STATUS
        ,Att_Student_Card.DEL_STATUS as DEL_STATUS
        ,Att_Student_Card.ENABLE_STATUS as ENABLE_STATUS
        ,Att_Student_Card.REMARKS as REMARKS
        ,Att_Student_Card.CREATE_TIME as CREATE_TIME
        ,Att_Student_Card.UPDATE_TIME as UPDATE_TIME
        ,Att_Student_Card.FK_CODE as FK_CODE
        ,Att_Student_Card.SCHOOL_FK_CODE as SCHOOL_FK_CODE
        ,Att_Student_Card.TYPE as TYPE
    </sql>

    <!--获得类名为:AttStudentCard对应的数据库表的数据总行数 -->
    <select id="getAttStudentCardRowCount" parameterType="com.cd.common.Assist" resultType="java.lang.Long">
        select count(ID) from Att_Student_Card
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:AttStudentCard对应数据库中表的数据集合 -->
    <select id="selectAttStudentCard" parameterType="com.cd.common.Assist"  resultMap="result_AttStudentCard_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="Att_Student_Card_Column" /> 
            </otherwise>
        </choose>
        from Att_Student_Card
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT ID as primary_key FROM Att_Student_Card
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=Att_Student_Card.ID
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个AttStudentCard对象,以参数AttStudentCard对象中不为空的属性作为条件进行查询-->
    <select id="selectAttStudentCardByObj" parameterType="com.cd.basic.pojo.domain.AttStudentCard" resultMap="result_AttStudentCard_Map">
        select 
            <include refid="Att_Student_Card_Column" /> 
        from Att_Student_Card
        <where>
            <if test="type != null "> and Att_Student_Card.TYPE = #{type}</if>
            <if test="schoolFkCode != null "> and Att_Student_Card.SCHOOL_FK_CODE = #{schoolFkCode}</if>
            <if test="fkCode != null "> and Att_Student_Card.FK_CODE = #{fkCode}</if>
            <if test="updateTime != null "> and Att_Student_Card.UPDATE_TIME = #{updateTime}</if>
            <if test="createTime != null "> and Att_Student_Card.CREATE_TIME = #{createTime}</if>
            <if test="remarks != null "> and Att_Student_Card.REMARKS = #{remarks}</if>
            <if test="enableStatus != null "> and Att_Student_Card.ENABLE_STATUS = #{enableStatus}</if>
            <if test="delStatus != null "> and Att_Student_Card.DEL_STATUS = #{delStatus}</if>
            <if test="bindingStatus != null "> and Att_Student_Card.BINDING_STATUS = #{bindingStatus}</if>
            <if test="cardCode != null "> and Att_Student_Card.CARD_CODE = #{cardCode}</if>
            <if test="campusFkCode != null "> and Att_Student_Card.CAMPUS_FK_CODE = #{campusFkCode}</if>
            <if test="id != null "> and Att_Student_Card.ID = #{id}</if>
        </where>
    </select> 

    <!-- 通过AttStudentCard的id获得对应数据库中表的数据对象-->
    <select id="selectAttStudentCardById" parameterType="java.lang.Long" resultMap="result_AttStudentCard_Map">
        select 
            <include refid="Att_Student_Card_Column" /> 
        from Att_Student_Card
        where Att_Student_Card.ID = #{id}
    </select> 

    <!-- 将AttStudentCard插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertAttStudentCard" parameterType="com.cd.basic.pojo.domain.AttStudentCard">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Student_Card(ID,CAMPUS_FK_CODE,CARD_CODE,BINDING_STATUS,DEL_STATUS,ENABLE_STATUS,REMARKS,CREATE_TIME,UPDATE_TIME,FK_CODE,SCHOOL_FK_CODE,TYPE) 
        values(#{id},#{campusFkCode},#{cardCode},#{bindingStatus},#{delStatus},#{enableStatus},#{remarks},#{createTime},#{updateTime},#{fkCode},#{schoolFkCode},#{type})
    </insert>

    <!-- 将AttStudentCard中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyAttStudentCard" parameterType="com.cd.basic.pojo.domain.AttStudentCard">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Student_Card
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">ID,</if>
            <if test="campusFkCode != null">CAMPUS_FK_CODE,</if>
            <if test="cardCode != null">CARD_CODE,</if>
            <if test="bindingStatus != null">BINDING_STATUS,</if>
            <if test="delStatus != null">DEL_STATUS,</if>
            <if test="enableStatus != null">ENABLE_STATUS,</if>
            <if test="remarks != null">REMARKS,</if>
            <if test="createTime != null">CREATE_TIME,</if>
            <if test="updateTime != null">UPDATE_TIME,</if>
            <if test="fkCode != null">FK_CODE,</if>
            <if test="schoolFkCode != null">SCHOOL_FK_CODE,</if>
            <if test="type != null">TYPE,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="campusFkCode != null"> #{campusFkCode},</if>
            <if test="cardCode != null"> #{cardCode},</if>
            <if test="bindingStatus != null"> #{bindingStatus},</if>
            <if test="delStatus != null"> #{delStatus},</if>
            <if test="enableStatus != null"> #{enableStatus},</if>
            <if test="remarks != null"> #{remarks},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="fkCode != null"> #{fkCode},</if>
            <if test="schoolFkCode != null"> #{schoolFkCode},</if>
            <if test="type != null"> #{type},</if>
        </trim>
    </insert>

    <!-- 将AttStudentCard批量插入到对应数据库的表中-->
    <insert id="insertAttStudentCardByBatch" parameterType="ArrayList">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into Att_Student_Card(ID,CAMPUS_FK_CODE,CARD_CODE,BINDING_STATUS,DEL_STATUS,ENABLE_STATUS,REMARKS,CREATE_TIME,UPDATE_TIME,FK_CODE,SCHOOL_FK_CODE,TYPE) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.campusFkCode},#{item.cardCode},#{item.bindingStatus},#{item.delStatus},#{item.enableStatus},#{item.remarks},#{item.createTime},#{item.updateTime},#{item.fkCode},#{item.schoolFkCode},#{item.type})
        </foreach>
    </insert>

    <!-- 通过AttStudentCard的id将数据库表中对应的数据删除-->
    <delete id="deleteAttStudentCardById" parameterType="java.lang.Long">
        delete from Att_Student_Card
        where ID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将AttStudentCard对应的数据库表的数据删除-->
    <delete id="deleteAttStudentCard" parameterType="com.cd.common.Assist">
        delete from Att_Student_Card
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过AttStudentCard的id将AttStudentCard的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateAttStudentCardById" parameterType="com.cd.basic.pojo.domain.AttStudentCard">
        update Att_Student_Card set
            CAMPUS_FK_CODE=#{campusFkCode}
            ,CARD_CODE=#{cardCode}
            ,BINDING_STATUS=#{bindingStatus}
            ,DEL_STATUS=#{delStatus}
            ,ENABLE_STATUS=#{enableStatus}
            ,REMARKS=#{remarks}
            ,CREATE_TIME=#{createTime}
            ,UPDATE_TIME=#{updateTime}
            ,FK_CODE=#{fkCode}
            ,SCHOOL_FK_CODE=#{schoolFkCode}
            ,TYPE=#{type}
        where ID=#{id}
    </update>

    <!-- 通过AttStudentCard的id将AttStudentCard中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttStudentCardById" parameterType="com.cd.basic.pojo.domain.AttStudentCard">
        update Att_Student_Card
        <set>
            <if test="campusFkCode != null">
                CAMPUS_FK_CODE=#{campusFkCode},
            </if>
            <if test="cardCode != null">
                CARD_CODE=#{cardCode},
            </if>
            <if test="bindingStatus != null">
                BINDING_STATUS=#{bindingStatus},
            </if>
            <if test="delStatus != null">
                DEL_STATUS=#{delStatus},
            </if>
            <if test="enableStatus != null">
                ENABLE_STATUS=#{enableStatus},
            </if>
            <if test="remarks != null">
                REMARKS=#{remarks},
            </if>
            <if test="createTime != null">
                CREATE_TIME=#{createTime},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME=#{updateTime},
            </if>
            <if test="fkCode != null">
                FK_CODE=#{fkCode},
            </if>
            <if test="schoolFkCode != null">
                SCHOOL_FK_CODE=#{schoolFkCode},
            </if>
            <if test="type != null">
                TYPE=#{type},
            </if>
        </set>
        where ID=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将AttStudentCard中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateAttStudentCard" parameterType="map">
        update Att_Student_Card
        <set>
                ID=#{enti.id},
                CAMPUS_FK_CODE=#{enti.campusFkCode},
                CARD_CODE=#{enti.cardCode},
                BINDING_STATUS=#{enti.bindingStatus},
                DEL_STATUS=#{enti.delStatus},
                ENABLE_STATUS=#{enti.enableStatus},
                REMARKS=#{enti.remarks},
                CREATE_TIME=#{enti.createTime},
                UPDATE_TIME=#{enti.updateTime},
                FK_CODE=#{enti.fkCode},
                SCHOOL_FK_CODE=#{enti.schoolFkCode},
                TYPE=#{enti.type},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将AttStudentCard中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAttStudentCard" parameterType="map">
        update Att_Student_Card
        <set>
            <if test="enti.id != null">
                ID=#{enti.id},
            </if>
            <if test="enti.campusFkCode != null">
                CAMPUS_FK_CODE=#{enti.campusFkCode},
            </if>
            <if test="enti.cardCode != null">
                CARD_CODE=#{enti.cardCode},
            </if>
            <if test="enti.bindingStatus != null">
                BINDING_STATUS=#{enti.bindingStatus},
            </if>
            <if test="enti.delStatus != null">
                DEL_STATUS=#{enti.delStatus},
            </if>
            <if test="enti.enableStatus != null">
                ENABLE_STATUS=#{enti.enableStatus},
            </if>
            <if test="enti.remarks != null">
                REMARKS=#{enti.remarks},
            </if>
            <if test="enti.createTime != null">
                CREATE_TIME=#{enti.createTime},
            </if>
            <if test="enti.updateTime != null">
                UPDATE_TIME=#{enti.updateTime},
            </if>
            <if test="enti.fkCode != null">
                FK_CODE=#{enti.fkCode},
            </if>
            <if test="enti.schoolFkCode != null">
                SCHOOL_FK_CODE=#{enti.schoolFkCode},
            </if>
            <if test="enti.type != null">
                TYPE=#{enti.type},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>